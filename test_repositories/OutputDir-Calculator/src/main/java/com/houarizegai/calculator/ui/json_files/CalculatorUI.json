{"file":{"path":"C:\\Users\\nandi\\OneDrive\\Documents\\4th year\\CS4099 - Dissertation\\Dissertation\\inspect4j\\test_repositories\\Calculator\\src\\main\\java\\com\\houarizegai\\calculator\\ui\\CalculatorUI.java","fileNameBase":"CalculatorUI","extension":"java"},"dependencies":[{"from_package":"com.houarizegai.calculator.theme.properties","import":"Theme","type":"internal","type_element":"class"},{"from_package":"com.houarizegai.calculator.theme","import":"ThemeLoader","type":"internal","type_element":"class"},{"from_package":"java.awt","import":"Cursor","type":"external","type_element":"class/interface"},{"from_package":"java.awt","import":"Font","type":"external","type_element":"class/interface"},{"from_package":"java.awt.event","import":"ItemEvent","type":"external","type_element":"class/interface"},{"from_package":"java.util","import":"Map","type":"external","type_element":"class/interface"},{"from_package":"java.util.regex","import":"Pattern","type":"external","type_element":"class/interface"},{"from_package":"java.awt","import":"Color","type":"external","type_element":"class/interface"},{"from_package":"javax.swing","import":"*","type":"external","type_element":"classes/interfaces"},{"from_package":"com.houarizegai.calculator.util.ColorUtil","import":"hex2Color","type":"internal","type_element":"static member"}],"classes":{"CalculatorUI":{"access_modifier":"public","non_access_modifiers":["none"],"min_max_lineno":{"min_lineno":16,"max_lineno":586},"store_vars_calls":{"themesMap":"ThemeLoader.loadThemes","window":"JFrame"},"methods":[{"CalculatorUI":{"access_modifier":"public","non_access_modifiers":["none"],"return_type":"void","min_max_lineno":{"min_lineno":62,"max_lineno":82},"calls":["window.setSize","window.setLocationRelativeTo","initInputScreen","initButtons","initCalculatorTypeSelector","initThemeSelector","window.setLayout","window.setResizable","window.setDefaultCloseOperation","window.setVisible"]}},{"calculate":{"access_modifier":"public","non_access_modifiers":["none"],"args":["secondNumber","firstNumber","operator"],"arg_types":{"secondNumber":"double","firstNumber":"double","operator":"char"},"return_type":"double","returns":["Math.pow(firstNumber, secondNumber)","firstNumber % secondNumber","secondNumber","firstNumber * secondNumber","firstNumber / secondNumber","firstNumber + secondNumber","firstNumber - secondNumber"],"min_max_lineno":{"min_lineno":84,"max_lineno":101},"calls":["Math.pow"]}},{"initThemeSelector":{"access_modifier":"private","non_access_modifiers":["none"],"return_type":"void","min_max_lineno":{"min_lineno":103,"max_lineno":116},"calls":["themesMap.keySet().toArray","themesMap.keySet","comboTheme.addItemListener","event.getStateChange","event.getItem","applyTheme","themesMap.get","themesMap.entrySet().iterator().hasNext","themesMap.entrySet().iterator","themesMap.entrySet","applyTheme","themesMap.entrySet().iterator().next().getValue","themesMap.entrySet().iterator().next","themesMap.entrySet().iterator","themesMap.entrySet"],"store_vars_calls":{"comboTheme":"createComboBox"},"lambdas":[{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (event.getStateChange() != ItemEvent.SELECTED)\r\n        return;\r\n    String selectedTheme = (String) event.getItem();\r\n    applyTheme(themesMap.get(selectedTheme));\r\n}","min_max_lineno":{"min_lineno":105,"max_lineno":111}}]}},{"initInputScreen":{"access_modifier":"private","non_access_modifiers":["none"],"args":["columns","rows"],"arg_types":{"columns":"int[]","rows":"int[]"},"return_type":"void","min_max_lineno":{"min_lineno":118,"max_lineno":125},"calls":["inputScreen.setBounds","inputScreen.setEditable","inputScreen.setBackground","inputScreen.setFont","window.add","Font"],"store_vars_calls":{"inputScreen":"JTextField"}}},{"initCalculatorTypeSelector":{"access_modifier":"private","non_access_modifiers":["none"],"return_type":"void","min_max_lineno":{"min_lineno":127,"max_lineno":149},"calls":["comboCalculatorType.addItemListener","event.getStateChange","event.getItem","window.setSize","btnRoot.setVisible","btnPower.setVisible","btnLog.setVisible","window.setSize","btnRoot.setVisible","btnPower.setVisible","btnLog.setVisible"],"store_vars_calls":{"comboCalculatorType":"createComboBox"},"lambdas":[{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (event.getStateChange() != ItemEvent.SELECTED)\r\n        return;\r\n    String selectedItem = (String) event.getItem();\r\n    switch(selectedItem) {\r\n        case \"Standard\":\r\n            window.setSize(WINDOW_WIDTH, WINDOW_HEIGHT);\r\n            btnRoot.setVisible(false);\r\n            btnPower.setVisible(false);\r\n            btnLog.setVisible(false);\r\n            break;\r\n        case \"Scientific\":\r\n            window.setSize(WINDOW_WIDTH + 80, WINDOW_HEIGHT);\r\n            btnRoot.setVisible(true);\r\n            btnPower.setVisible(true);\r\n            btnLog.setVisible(true);\r\n            break;\r\n    }\r\n}","min_max_lineno":{"min_lineno":129,"max_lineno":148}}]}},{"initButtons":{"access_modifier":"private","non_access_modifiers":["none"],"args":["columns","rows"],"arg_types":{"columns":"int[]","rows":"int[]"},"return_type":"void","min_max_lineno":{"min_lineno":151,"max_lineno":508},"calls":["btnC.addActionListener","inputScreen.setText","btnBack.addActionListener","str.length","str2.append","str.charAt","str2.toString().equals","str2.toString","inputScreen.setText","inputScreen.setText","str2.toString","btnMod.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btnDiv.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btn7.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btn8.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btn9.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btnMul.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btn4.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btn5.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btn6.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btnSub.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btn1.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btn2.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btn3.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btnAdd.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btnPoint.addActionListener","inputScreen.getText().contains","inputScreen.getText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btn0.addActionListener","Pattern.matches","inputScreen.getText","inputScreen.setText","inputScreen.setText","inputScreen.getText","inputScreen.setText","btnEqual.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btnEqual.setSize","btnRoot.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btnRoot.setVisible","btnPower.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btnPower.setFont","btnPower.setVisible","btnLog.addActionListener","Pattern.matches","inputScreen.getText","Double.parseDouble","inputScreen.getText","Pattern.matches","String.valueOf","inputScreen.setText","String.valueOf","inputScreen.setText","String.valueOf","btnLog.setVisible","Font"],"store_vars_calls":{"btnC":"createButton","btnBack":"createButton","btnMod":"createButton","typedValue":["calculate","calculate","calculate","calculate","calculate","calculate","Math.sqrt","calculate","Math.log"],"btnDiv":"createButton","btn7":"createButton","btn8":"createButton","btn9":"createButton","btnMul":"createButton","btn4":"createButton","btn5":"createButton","btn6":"createButton","btnSub":"createButton","btn1":"createButton","btn2":"createButton","btn3":"createButton","btnAdd":"createButton","btnPoint":"createButton","btn0":"createButton","btnEqual":"createButton","btnRoot":"createButton","btnPower":"createButton","btnLog":"createButton","str":"inputScreen.getText","str2":"StringBuilder"},"lambdas":[{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    inputScreen.setText(\"0\");\r\n    selectedOperator = ' ';\r\n    typedValue = 0;\r\n}","min_max_lineno":{"min_lineno":153,"max_lineno":157}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    String str = inputScreen.getText();\r\n    StringBuilder str2 = new StringBuilder();\r\n    for (int i = 0; i < (str.length() - 1); i++) {\r\n        str2.append(str.charAt(i));\r\n    }\r\n    if (str2.toString().equals(\"\")) {\r\n        inputScreen.setText(\"0\");\r\n    } else {\r\n        inputScreen.setText(str2.toString());\r\n    }\r\n}","min_max_lineno":{"min_lineno":160,"max_lineno":171}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()) || !go)\r\n        return;\r\n    typedValue = calculate(typedValue, Double.parseDouble(inputScreen.getText()), selectedOperator);\r\n    if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n        inputScreen.setText(String.valueOf((int) typedValue));\r\n    } else {\r\n        inputScreen.setText(String.valueOf(typedValue));\r\n    }\r\n    selectedOperator = '%';\r\n    go = false;\r\n    addToDisplay = false;\r\n}","min_max_lineno":{"min_lineno":174,"max_lineno":187}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = calculate(typedValue, Double.parseDouble(inputScreen.getText()), selectedOperator);\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = '/';\r\n        go = false;\r\n        addToDisplay = false;\r\n    } else {\r\n        selectedOperator = '/';\r\n    }\r\n}","min_max_lineno":{"min_lineno":190,"max_lineno":207}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"7\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"7\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"7\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":210,"max_lineno":222}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"8\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"8\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"8\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":225,"max_lineno":237}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"9\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"9\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"9\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":240,"max_lineno":252}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = calculate(typedValue, Double.parseDouble(inputScreen.getText()), selectedOperator);\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = '*';\r\n        go = false;\r\n        addToDisplay = false;\r\n    } else {\r\n        selectedOperator = '*';\r\n    }\r\n}","min_max_lineno":{"min_lineno":255,"max_lineno":272}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"4\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"4\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"4\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":275,"max_lineno":287}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"5\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"5\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"5\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":290,"max_lineno":302}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"6\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"6\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"6\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":305,"max_lineno":317}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = calculate(typedValue, Double.parseDouble(inputScreen.getText()), selectedOperator);\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = '-';\r\n        go = false;\r\n        addToDisplay = false;\r\n    } else {\r\n        selectedOperator = '-';\r\n    }\r\n}","min_max_lineno":{"min_lineno":320,"max_lineno":338}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"1\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"1\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"1\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":341,"max_lineno":353}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"2\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"2\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"2\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":356,"max_lineno":368}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"3\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"3\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"3\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":371,"max_lineno":383}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = calculate(typedValue, Double.parseDouble(inputScreen.getText()), selectedOperator);\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = '+';\r\n        go = false;\r\n        addToDisplay = false;\r\n    } else {\r\n        selectedOperator = '+';\r\n    }\r\n}","min_max_lineno":{"min_lineno":386,"max_lineno":403}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (!inputScreen.getText().contains(\".\")) {\r\n            inputScreen.setText(inputScreen.getText() + \".\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"0.\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":406,"max_lineno":416}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (addToDisplay) {\r\n        if (Pattern.matches(\"[0]*\", inputScreen.getText())) {\r\n            inputScreen.setText(\"0\");\r\n        } else {\r\n            inputScreen.setText(inputScreen.getText() + \"0\");\r\n        }\r\n    } else {\r\n        inputScreen.setText(\"0\");\r\n        addToDisplay = true;\r\n    }\r\n    go = true;\r\n}","min_max_lineno":{"min_lineno":419,"max_lineno":431}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = calculate(typedValue, Double.parseDouble(inputScreen.getText()), selectedOperator);\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = '=';\r\n        addToDisplay = false;\r\n    }\r\n}","min_max_lineno":{"min_lineno":434,"max_lineno":448}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = Math.sqrt(Double.parseDouble(inputScreen.getText()));\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = '?';\r\n        addToDisplay = false;\r\n    }\r\n}","min_max_lineno":{"min_lineno":452,"max_lineno":466}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = calculate(typedValue, Double.parseDouble(inputScreen.getText()), selectedOperator);\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = '^';\r\n        go = false;\r\n        addToDisplay = false;\r\n    } else {\r\n        selectedOperator = '^';\r\n    }\r\n}","min_max_lineno":{"min_lineno":470,"max_lineno":487}},{"args":["event"],"arg_types":{"event":""},"body":"{\r\n    if (!Pattern.matches(DOUBLE_OR_NUMBER_REGEX, inputScreen.getText()))\r\n        return;\r\n    if (go) {\r\n        typedValue = Math.log(Double.parseDouble(inputScreen.getText()));\r\n        if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(typedValue))) {\r\n            inputScreen.setText(String.valueOf((int) typedValue));\r\n        } else {\r\n            inputScreen.setText(String.valueOf(typedValue));\r\n        }\r\n        selectedOperator = 'l';\r\n        addToDisplay = false;\r\n    }\r\n}","min_max_lineno":{"min_lineno":492,"max_lineno":506}}]}},{"createComboBox":{"access_modifier":"private","non_access_modifiers":["none"],"args":["x","toolTip","y","items"],"arg_types":{"x":"int","toolTip":"String","y":"int","items":"String[]"},"return_type":"JComboBox<String>","returns":["combo"],"min_max_lineno":{"min_lineno":510,"max_lineno":518},"calls":["combo.setBounds","combo.setToolTipText","combo.setCursor","window.add","Cursor"],"store_vars_calls":{"combo":"JComboBox<>"}}},{"createButton":{"access_modifier":"private","non_access_modifiers":["none"],"args":["x","y","label"],"arg_types":{"x":"int","y":"int","label":"String"},"return_type":"JButton","returns":["btn"],"min_max_lineno":{"min_lineno":520,"max_lineno":529},"calls":["btn.setBounds","btn.setFont","btn.setCursor","btn.setFocusable","window.add","Font","Cursor"],"store_vars_calls":{"btn":"JButton"}}},{"applyTheme":{"access_modifier":"private","non_access_modifiers":["none"],"args":["theme"],"arg_types":{"theme":"Theme"},"return_type":"void","min_max_lineno":{"min_lineno":531,"max_lineno":585},"calls":["window.getContentPane().setBackground","window.getContentPane","hex2Color","theme.getApplicationBackground","comboCalculatorType.setForeground","hex2Color","theme.getTextColor","comboTheme.setForeground","hex2Color","theme.getTextColor","inputScreen.setForeground","hex2Color","theme.getTextColor","btn0.setForeground","hex2Color","theme.getTextColor","btn1.setForeground","hex2Color","theme.getTextColor","btn2.setForeground","hex2Color","theme.getTextColor","btn3.setForeground","hex2Color","theme.getTextColor","btn4.setForeground","hex2Color","theme.getTextColor","btn5.setForeground","hex2Color","theme.getTextColor","btn6.setForeground","hex2Color","theme.getTextColor","btn7.setForeground","hex2Color","theme.getTextColor","btn8.setForeground","hex2Color","theme.getTextColor","btn9.setForeground","hex2Color","theme.getTextColor","btnPoint.setForeground","hex2Color","theme.getTextColor","btnC.setForeground","hex2Color","theme.getTextColor","btnBack.setForeground","hex2Color","theme.getTextColor","btnMod.setForeground","hex2Color","theme.getTextColor","btnDiv.setForeground","hex2Color","theme.getTextColor","btnMul.setForeground","hex2Color","theme.getTextColor","btnSub.setForeground","hex2Color","theme.getTextColor","btnAdd.setForeground","hex2Color","theme.getTextColor","btnRoot.setForeground","hex2Color","theme.getTextColor","btnLog.setForeground","hex2Color","theme.getTextColor","btnPower.setForeground","hex2Color","theme.getTextColor","btnEqual.setForeground","hex2Color","theme.getBtnEqualTextColor","comboCalculatorType.setBackground","hex2Color","theme.getApplicationBackground","comboTheme.setBackground","hex2Color","theme.getApplicationBackground","inputScreen.setBackground","hex2Color","theme.getApplicationBackground","btn0.setBackground","hex2Color","theme.getNumbersBackground","btn1.setBackground","hex2Color","theme.getNumbersBackground","btn2.setBackground","hex2Color","theme.getNumbersBackground","btn3.setBackground","hex2Color","theme.getNumbersBackground","btn4.setBackground","hex2Color","theme.getNumbersBackground","btn5.setBackground","hex2Color","theme.getNumbersBackground","btn6.setBackground","hex2Color","theme.getNumbersBackground","btn7.setBackground","hex2Color","theme.getNumbersBackground","btn8.setBackground","hex2Color","theme.getNumbersBackground","btn9.setBackground","hex2Color","theme.getNumbersBackground","btnPoint.setBackground","hex2Color","theme.getNumbersBackground","btnC.setBackground","hex2Color","theme.getOperatorBackground","btnBack.setBackground","hex2Color","theme.getOperatorBackground","btnMod.setBackground","hex2Color","theme.getOperatorBackground","btnDiv.setBackground","hex2Color","theme.getOperatorBackground","btnMul.setBackground","hex2Color","theme.getOperatorBackground","btnSub.setBackground","hex2Color","theme.getOperatorBackground","btnAdd.setBackground","hex2Color","theme.getOperatorBackground","btnRoot.setBackground","hex2Color","theme.getOperatorBackground","btnLog.setBackground","hex2Color","theme.getOperatorBackground","btnPower.setBackground","hex2Color","theme.getOperatorBackground","btnEqual.setBackground","hex2Color","theme.getBtnEqualBackground"]}}]}}}